////////////////////////////////////////////////////////////////////////////////////////
ToDo:
	Feature: Automatically reset window when screen size is 800 x 600
	Feature: Add logic to allow window to shrink down further
	Feature: Add logic to remeber last window size and position (to include monitor)
	Feature: Add Replace support to Scintilla compalibility by using std::regex for replace.
	Feature: Add split line to allow user to change size ratio of the token window against the sample window.
	Feature: Replace Target Text
		Add button that will replace the target text with clipboard content
	Feature: Append Target Text
		Add button that will append the target text field with clipboard content
	Feature: Replace Target Text at startup
		Add command line option that will replace target text with clipboard content when the program starts
	Feature: Command line option for Regex input
		Add command line option to populate the regex input field on program startup
	Feature: command line option to perform a regex replace
		Add command line option to perform a regex replace on a file or multiple files matching DOS wildcards
	Feature: Add additional context menu items to the sample field
		Add context menu item to replace (or append) sample with multiple sets of examples designed for each pattern listed in the token  list
	Feature: Build button
		Add Build button which is disabled until content is entered into regex-input field.
		When build button is selected, display a tree menu with following top level branches:
		Find words
		Find Sentence
			Sub nodes will include the string in regex-input field.
			Find Words
				Find words with "foo"
					Find words starting with "foo"
						Only find words in the begging of a line
						Only find words at the end of a line
						Only find words in the middle of a line
						Only get the part after "foo"  **-->Needs lookahead support
						Find words anywhere
					Find words with "foo" in the middle
					Find words ending with "foo"
					Find words having "foo"
				Find words without "foo"

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////





